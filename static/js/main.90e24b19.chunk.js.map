{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","backgroundColor","mode","col","color","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","console","log","react_router_dom","to","title","aria-label","aria-current","onClick","toggleMode","aria-checked","htmlFor","TextForm","count","ntext","ar","split","sum","length","i","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","newText","showAlert","navigator","clipboard","writeText","document","getSelection","removeAllRanges","nText","join","margin","prototype","PropTypes","string","about","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","cls","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.90e24b19.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height : '50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// import {useState} from 'react';\r\n\r\nexport default function About(props) {\r\n\r\n    // const[myStyle,setMyStyle] = useState(\r\n    //     {\r\n    //         color :'#313131',\r\n    //         backgroundColor : 'White'\r\n    //     }\r\n    // )\r\n\r\n    // const[btnText,setBtnText] = useState(\"Dark Mode\")\r\n\r\n  //  const toggleStyle = ()=>{\r\n  //       if(myStyle.color === 'white'){\r\n  //           setMyStyle(\r\n  //               {\r\n  //                   color : '#313131',\r\n  //                   backgroundColor : 'white',\r\n  //                   border : '1px solid white'\r\n  //               }\r\n  //           )\r\n  //           setBtnText(\"Dark Mode\")\r\n  //       }\r\n       \r\n  //       else{\r\n  //           setMyStyle(\r\n  //               {\r\n  //                   color : 'white',\r\n  //                   backgroundColor : '#515151'\r\n                    \r\n  //               }\r\n  //           )\r\n  //           setBtnText(\"Light Mode\")\r\n  //       }\r\n  //   }\r\n\r\n  return (\r\n    <div className=\"container\" style = {{backgroundColor : props.mode === 'dark' ? props.col : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n        <h1 className=\"my-3\">About</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <button className=\"btn btn-primary my-2\" onClick={toggleStyle} >\r\n          {btnText}\r\n        </button> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  console.log(props.mode + \" navbar\");\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n    <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link act\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link act\" to=\"/about\">About</Link>\r\n        </li> \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      {/* <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" onClick = {()=> props.toggleMode('primary')} style = {{height : '30px' , width : '30px' , cursor : 'pointer'}}></div>\r\n        <div className=\"bg-danger rounded mx-2\" onClick = {()=> props.toggleMode('danger')} style = {{height : '30px' , width : '30px' , cursor : 'pointer'}}></div>\r\n        <div className=\"bg-success rounded mx-2\" onClick = {()=> props.toggleMode('succcess')} style = {{height : '30px' , width : '30px' , cursor : 'pointer'}}></div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick = {()=> props.toggleMode('warning')} style = {{height : '30px' , width : '30px' , cursor : 'pointer'}}></div>\r\n      </div> */}\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={()=> props.toggleMode('null')} role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.prototype = {\r\n    title : PropTypes.string,\r\n    about : PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title : 'Set Title',\r\n    about : 'Set about us'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\nconsole.log();\r\n\r\n  const handleUpClick = () => {\r\n    //console.log(\"Uppercase was Clicked : \" + text);\r\n    let newText = text.toUpperCase();\r\n    //setText(\"You have clicked on handleUpClick\");\r\n    setText(newText);\r\n    if(text === \"\"){\r\n      props.showAlert(\"Please enter the text \" , \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Converted to Upper Case \" , \"success\");\r\n    }\r\n  };\r\n  const handleLoClick = () => {\r\n    //console.log(\"Uppercase was Clicked : \" + text);\r\n    let newText = text.toLowerCase();\r\n    //setText(\"You have clicked on handleUpClick\");\r\n    setText(newText);\r\n    if(text === \"\"){\r\n      props.showAlert(\"Please enter the text \" , \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Converted to Lower Case \" , \"success\");\r\n    }\r\n  };\r\n   const handleClClick = () => {\r\n    \r\n    let newText = '';\r\n   \r\n    setText(newText);\r\n    props.showAlert(\"Text cleared \" , \"success\")\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to Clipboard \" , \"success\")\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    let nText = newText.join(\" \");\r\n    if(nText.charAt(0) === ' ' && nText.length > 1){\r\n      nText = nText.slice(1);\r\n    }\r\n    setText(nText);\r\n    props.showAlert(\"Text Formated \" , \"success\")\r\n  };\r\n  const handlefirstUp = () => {\r\n\r\n    let newText = text.split(\" \");\r\n    for(let i=0;i<newText.length;i++){\r\n      newText[i]=newText[i].charAt(0).toUpperCase() + newText[i].slice(1).toLowerCase();\r\n    }\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Converted first letter to capital \" , \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    //console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const count = (ntext)=>{\r\n    let ar = ntext.split(/\\s+/);\r\n    let sum = ar.length;\r\n    if(ntext === ''){\r\n      sum = 0;\r\n    }\r\n    let i = sum-1;\r\n    while(i >= 0){\r\n      if(ar[i] === \"\"){\r\n        sum--;\r\n      }\r\n      i--;\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  const [text, setText] = useState(\"Enter the text here\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"\r\n      style = {{backgroundColor : props.col ,\r\n      color : props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className={`mb-3`}>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style = {{backgroundColor : props.mode === 'dark' ? '#515151' : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={count(text)===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled={count(text)===0} className=\"btn btn-primary my-2\" onClick={handleClClick}>\r\n          Clear\r\n        </button>\r\n        \r\n        <button disabled={count(text)===0} className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        \r\n        <button disabled={count(text)===0} className=\"btn btn-primary my-2\" onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n\r\n        <button disabled={count(text)===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        \r\n        <button disabled={count(text)===0} className=\"btn btn-primary\" style={{margin: '8px'}} onClick={handlefirstUp}>\r\n          First letter Upper Case\r\n        </button>\r\n      </div>\r\n      <div className=\"container\"style = {{backgroundColor : props.mode === 'dark' ? props.col : 'white' ,color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>\r\n                {count(text)} words , {text.length} characters</p>\r\n            <p>\r\n                {0.008 * count(text)} Minutes to read.\r\n            </p>\r\n            <h2>Preview</h2>\r\n            <p>{count(text) === 0? \"Nothing to preview\" : text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport './App.css';\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\nimport About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const[mode,setMode] = useState('light');\r\n  const[alert,setAlert] = useState(null);\r\n\r\n  const showAlert = (message,type) =>{\r\n    setAlert({\r\n      msg : message,\r\n      type : type\r\n    })\r\n    setTimeout(() =>{\r\n      setAlert(null);\r\n    },1500)\r\n  }\r\n  const toggleMode = (cls)=>{\r\n      if(mode === 'light'){\r\n        setMode('dark');\r\n        // removeBodyClasses();\r\n        // document.body.classList.add('bg-'+cls);\r\n        document.body.style.backgroundColor = 'grey';\r\n        showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  // const removeBodyClasses = () =>{\r\n  //   document.body.classList.remove('bg-dark');\r\n  //   document.body.classList.remove('bg-primary');\r\n  //   document.body.classList.remove('bg-light');\r\n  //   document.body.classList.remove('bg-success');\r\n  //   document.body.classList.remove('bg-danger');\r\n  //   document.body.classList.remove('bg-warning');\r\n  // }\r\n  return (\r\n    <>\r\n    <Router>\r\n    <Navbar title=\"TextUtils\" about=\"About us 2\" mode={mode}  toggleMode={toggleMode}/>\r\n     <Alert alert = {alert} />\r\n      <div className=\"container my-3\" >\r\n        <Routes>\r\n            <Route exact path=\"/about\" element={<About  mode={mode} toggleMode={toggleMode} />} />\r\n            <Route exact path=\"/\" element={<TextForm  showAlert={showAlert} heading = \"Enter the text to anazlyze \" mode={mode} toggleMode={toggleMode}/>}  />\r\n          </Routes>\r\n          {/* <TextForm  showAlert={showAlert} heading = \"Enter the text to anazlyze \" mode={mode} toggleMode={toggleMode}/> */}\r\n      </div>\r\n      </Router>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}